CREATE TABLE Customers (
CustomerID INT PRIMARY KEY,
CustomerName VARCHAR(255),
City VARCHAR(255)
);

CREATE TABLE Orders (
OrderID INT PRIMARY KEY,
CustomerID INT,
OrderDate DATE,
Amount DECIMAL(10, 2),
FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

  Sample Data (if needed again)
INSERT INTO Customers (CustomerID, CustomerName, City) VALUES
(1, 'Alice Smith', 'New York'),
(2, 'Bob Johnson', 'Los Angeles'),
(3, 'Charlie Brown', 'Chicago'),
(4, 'David Lee', 'Houston');

INSERT INTO Orders (OrderID, CustomerID, OrderDate, Amount) VALUES
(101, 1, '2023-01-15', 150.00),
(102, 2, '2023-01-20', 250.50),
(103, 1, '2023-02-01', 75.20),
(104, 3, '2023-02-10', 300.00),
(105, 5, '2023-03-01', 120.00),   Order for a non-existent customer
(106, 2, '2023-03-05', 90.00);

SELECT
C.CustomerName,
(SELECT SUM(O.Amount)
FROM Orders O
WHERE O.CustomerID = C.CustomerID) AS TotalOrderAmount
FROM
Customers C;

SELECT
CustomerID,
CustomerName
FROM
Customers
WHERE
CustomerID IN (SELECT DISTINCT CustomerID FROM Orders);

SELECT
C.CustomerName
FROM
Customers C
JOIN
Orders O ON C.CustomerID = O.CustomerID
WHERE
O.Amount = (SELECT MAX(Amount) FROM Orders);

SELECT
CustomerID,
CustomerName
FROM
Customers C
WHERE
EXISTS (SELECT 1 FROM Orders O WHERE O.CustomerID = C.CustomerID);

SELECT
CustomerName,
AvgOrderAmountPerCustomer
FROM
(SELECT
C.CustomerName,
AVG(O.Amount) AS AvgOrderAmountPerCustomer
FROM
Customers C
JOIN
Orders O ON C.CustomerID = O.CustomerID
GROUP BY
C.CustomerName
) AS CustomerAverages
WHERE
AvgOrderAmountPerCustomer > (SELECT AVG(Amount) FROM Orders);

